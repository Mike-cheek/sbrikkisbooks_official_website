{"version":3,"file":"component---src-pages-king-jsx-e3c7aeedb97d9f9f1efa.js","mappings":"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","sources":["webpack://sbrikkisbooks/./src/atoms/separator/separator.jsx","webpack://sbrikkisbooks/./src/atoms/separator/separator.module.scss","webpack://sbrikkisbooks/./src/atoms/playersList/playersList.jsx","webpack://sbrikkisbooks/./src/atoms/playersList/playersList.module.scss","webpack://sbrikkisbooks/./src/components/choosePlayers/choosePlayers.jsx","webpack://sbrikkisbooks/./src/components/choosePlayers/choosePlayers.module.scss","webpack://sbrikkisbooks/./src/components/playerGame/playerGame.jsx","webpack://sbrikkisbooks/./src/components/playerGame/playerGame.module.scss","webpack://sbrikkisbooks/./src/components/play/play.jsx","webpack://sbrikkisbooks/./src/components/kingHero/kingHero.jsx","webpack://sbrikkisbooks/./src/components/kingHero/kingHero.module.scss","webpack://sbrikkisbooks/./src/pages/king.jsx","webpack://sbrikkisbooks/./src/styles/king.module.scss"],"sourcesContent":["import React from 'react'\r\nimport * as styles from './separator.module.scss'\r\n\r\nconst Separator = () => {\r\n    return (\r\n        <div className={styles.separator} />\r\n    )\r\n}\r\n\r\nexport default Separator\r\n","// extracted by mini-css-extract-plugin\nexport var separator = \"separator-module--separator--elrPK\";","import React, { useState, useEffect } from 'react'\r\nimport * as styles from './playersList.module.scss'\r\n\r\nfunction PlayersList(props) {\r\n    let i;\r\n\r\n    let players = [];\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    for(i=0; i<props.numPlayers; i++){\r\n        players.push(i);\r\n    }\r\n\r\n    useEffect( ()=>{\r\n        let myElement = document.getElementById('list');\r\n        let bounding = myElement.getBoundingClientRect();\r\n        if (bounding.top >= 0 && bounding.left >= 0 && bounding.right <= window.innerWidth && bounding.bottom <= window.innerHeight) {\r\n            setVisible(true);\r\n        } else {\r\n            setVisible(false);\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            {\r\n                players.map((index) => {\r\n                    return(\r\n                        <div className={visible? styles.list : styles.hiddenList} id={\"list\"} key={index}>\r\n                            <input type=\"input\" id={\"player\"+index} placeholder=\"Name\" className={styles.playerInput} />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n            { \r\n                props.numPlayers > 0 ?\r\n                    <button onClick={props.onClick}>\r\n                        <h3>START!</h3>\r\n                    </button>\r\n                    :\r\n                    null\r\n            }\r\n        </>\r\n    );\r\n    \r\n\r\n    \r\n}\r\n\r\nexport default PlayersList\r\n","// extracted by mini-css-extract-plugin\nexport var hiddenList = \"playersList-module--hiddenList--ZXnSc\";\nexport var list = \"playersList-module--list--tarmp\";\nexport var playerInput = \"playersList-module--playerInput--z5a6o\";\nexport var pop = \"playersList-module--pop--5u-Bg\";","import React from 'react'\r\nimport PlayersList from '../../atoms/playersList/playersList'\r\nimport * as styles from './choosePlayers.module.scss'\r\n\r\nfunction ChoosePlayers(props) {\r\n    return (\r\n        <>\r\n            <div className={styles.players}>\r\n                <h2>How many players?</h2>\r\n                <div className={styles.countPlayers}>\r\n                    <button onClick={props.decreasePlayers}>\r\n                        <p>-</p>\r\n                    </button>\r\n                    <p>{props.numPlayers}</p>\r\n                    <button onClick={props.increasePlayers}>\r\n                        <p>+</p>\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <PlayersList numPlayers={props.numPlayers} onClick={props.getPlayers}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChoosePlayers\r\n","// extracted by mini-css-extract-plugin\nexport var countPlayers = \"choosePlayers-module--countPlayers--o3xT5\";\nexport var players = \"choosePlayers-module--players--hYuqk\";\nexport var pop = \"choosePlayers-module--pop--vtltW\";","import React, { useState } from 'react'\r\nimport * as styles from './playerGame.module.scss'\r\n\r\nconst PlayerGame = (props) => {\r\n\r\n    let i;\r\n    \r\n    let array = [];\r\n\r\n    const [points, setPoints] = useState(0);\r\n\r\n    for(i = 1; i <= props.rounds; i++){\r\n        array.push(i);\r\n    }\r\n\r\n    const addPoints = (checked, idNum) => {\r\n        if(checked){\r\n            setPoints(points*1 + 10 + document.getElementById(idNum).value*1);\r\n            document.getElementById(idNum).disabled = true;\r\n        }\r\n        else{\r\n            setPoints(points*1 - 10 - document.getElementById(idNum).value*1);\r\n            document.getElementById(idNum).disabled = false;\r\n        }\r\n    }\r\n\r\n    const createRange = ((end) => {\r\n        let array = [];\r\n        for (let i = 0; i <= end; i++){\r\n            array.push(i);\r\n        }\r\n        return array;\r\n    });\r\n\r\n    const checkCheckbox = (id) => {\r\n        if(document.getElementById(id) == null)\r\n            return false;\r\n        return document.getElementById(id).checked;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className={styles.playerGame}>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <p className={styles.name}>\r\n                                <strong>{props.name}</strong> (Points: <strong>{points}</strong>)\r\n                            </p>\r\n                        </td>\r\n                    </tr>\r\n                        <tr>\r\n                        {\r\n                            array.map((elem,i) => {\r\n                                return(\r\n                                    <td className={styles.round}> \r\n                                        <h6>Round {elem}</h6>\r\n                                        <div className={styles.bet}>\r\n                                            <h5>Bet</h5>\r\n                                            {i === props.currentRound-1 && !checkCheckbox(\"check\" + props.name + elem)?\r\n                                                <select\r\n                                                    id={\"num\" + props.name + elem} \r\n                                                    placeholder=\"0\"\r\n                                                >\r\n                                                    {\r\n                                                        createRange(elem).map((index) => {\r\n                                                            return(\r\n                                                                <option \r\n                                                                    key={index}\r\n                                                                    value={index}\r\n                                                                > {index} </option>\r\n                                                            );\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            :\r\n                                                <select\r\n                                                    id={\"num\" + props.name + elem} \r\n                                                    placeholder=\"0\"\r\n                                                    disabled\r\n                                                >    \r\n                                                {\r\n                                                        createRange(elem).map((index) => {\r\n                                                            return(\r\n                                                                <option \r\n                                                                    key={index}\r\n                                                                    value={index}\r\n                                                                > {index} </option>\r\n                                                            );\r\n                                                        })\r\n                                                    }       \r\n                                                </select>                                \r\n                                            }\r\n                                        </div>\r\n                                        <div className={styles.win}>\r\n                                            <h5>Won?</h5>\r\n                                            {i === props.currentRound-1?\r\n                                                <input\r\n                                                    type=\"checkbox\" \r\n                                                    id={\"check\" + props.name + elem} \r\n                                                    onChange={(e) => addPoints(e.target.checked, \"num\" + props.name + elem)} \r\n                                                />\r\n                                            :\r\n                                                <input\r\n                                                    type=\"checkbox\" \r\n                                                    id={\"check\" + props.name + elem} \r\n                                                    onChange={(e) => addPoints(e.target.checked, \"num\" + props.name + elem)} \r\n                                                    disabled\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                    </td>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlayerGame\r\n","// extracted by mini-css-extract-plugin\nexport var bet = \"playerGame-module--bet--9lgTg\";\nexport var field = \"playerGame-module--field--I0w2A\";\nexport var name = \"playerGame-module--name--Zfxw6\";\nexport var playerGame = \"playerGame-module--playerGame--RY64B\";\nexport var round = \"playerGame-module--round--V59cS\";\nexport var win = \"playerGame-module--win--DAnBb\";","import React from 'react'\r\nimport PlayerGame from '../playerGame/playerGame'\r\n\r\nconst Play = (props) => {\r\n\r\n    return(\r\n        <form>\r\n            {props.players.map((player,i) => {\r\n                return(\r\n                    <div key={player.key} id={'table'+i}>\r\n                        <PlayerGame name={player.name} rounds={props.rounds} currentRound={props.currentRound} />\r\n                    </div>\r\n                    \r\n                );\r\n            })}\r\n        </form>\r\n    );\r\n    \r\n}\r\n\r\nexport default Play\r\n","import React, { useState } from 'react';\r\nimport * as styles from './kingHero.module.scss';\r\nimport ChoosePlayers from '../choosePlayers/choosePlayers';\r\nimport Play from '../play/play';\r\n\r\nconst KingHero = () => {\r\n  const [start, setStart] = useState(false);\r\n  const [numPlayers, setNumPlayers] = useState(5);\r\n  const [players, setPlayers] = useState([]);\r\n  const [rounds, setRounds] = useState(0);\r\n  const [removeCards, setRemoveCards] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState(1);\r\n\r\n  const deck = 40;\r\n  let playersTmp = [];\r\n\r\n  const decreasePlayers = () => {\r\n    if (numPlayers > 0) {\r\n      setNumPlayers(numPlayers - 1);\r\n    }\r\n    if (numPlayers <= 0) {\r\n      alert('Mbare ocaca menu un cristiano nun si po fari');\r\n    }\r\n  };\r\n\r\n  const increasePlayers = () => {\r\n    if (numPlayers < 10) {\r\n      setNumPlayers(numPlayers + 1);\r\n    }\r\n    if (numPlayers >= 10) {\r\n      alert('Mbare quantu spacchiu siti');\r\n    }\r\n  };\r\n\r\n  const decreaseCurrentRound = () => {\r\n    setCurrentRound(currentRound - 1);\r\n  };\r\n\r\n  const increaseCurrentRound = () => {\r\n    setCurrentRound(currentRound + 1);\r\n  };\r\n\r\n  const getPlayers = () => {\r\n    let check = true;\r\n    for (let i = 0; i < numPlayers; i++) {\r\n      let name = document.getElementById('player' + i).value;\r\n      if (name === '') check = false;\r\n    }\r\n\r\n    if (check) {\r\n      for (let i = 0; i < numPlayers; i++) {\r\n        let name = document.getElementById('player' + i);\r\n        playersTmp.push({\r\n          id: i,\r\n          key: i,\r\n          name: name.value,\r\n        });\r\n      }\r\n      setPlayers(playersTmp);\r\n      setStart(true);\r\n      setRounds(parseInt(deck / numPlayers));\r\n      setRemoveCards(deck % numPlayers);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.kingHero} id=\"/king\">\r\n      <h1>Let's play King</h1>\r\n\r\n      {start ? null : (\r\n        <ChoosePlayers\r\n          decreasePlayers={decreasePlayers}\r\n          increasePlayers={increasePlayers}\r\n          numPlayers={numPlayers}\r\n          getPlayers={getPlayers}\r\n        />\r\n      )}\r\n\r\n      {rounds > 0 ? (\r\n        <h3>\r\n          We are going to play {rounds} {rounds === 1 ? 'round' : 'rounds'}\r\n          {removeCards > 0\r\n            ? ` and you have to remove ${removeCards} ${removeCards === 1 ? 'card' : 'cards'} from the deck`\r\n            : null}\r\n        </h3>\r\n      ) : (\r\n        <h3>Insert names to start</h3>\r\n      )}\r\n\r\n      {start ? (\r\n        <>\r\n          <div className={styles.play}>\r\n            <Play players={players} rounds={rounds} currentRound={currentRound} />\r\n          </div>\r\n          <div className={styles.changeRound}>\r\n            {currentRound > 1 ? (\r\n              <button onClick={decreaseCurrentRound}>{`<-`}</button>\r\n            ) : (\r\n              <button disabled>{`<-`}</button>\r\n            )}\r\n            <p className={styles.roundText}>Round {currentRound}</p>\r\n            {currentRound < rounds ? (\r\n              <button onClick={increaseCurrentRound}>{`->`}</button>\r\n            ) : (\r\n              <button disabled>{`->`}</button>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KingHero;\r\n","// extracted by mini-css-extract-plugin\nexport var changeRound = \"kingHero-module--changeRound--8SGxt\";\nexport var kingHero = \"kingHero-module--kingHero--tqT75\";\nexport var play = \"kingHero-module--play--so5EE\";\nexport var roundText = \"kingHero-module--roundText--AaZw3\";","import React, { useEffect /*, useState */ } from 'react';\r\nimport KingHero from '../components/kingHero/kingHero';\r\nimport Layout from '../components/layout/layout';\r\nimport Separator from '../atoms/separator/separator';\r\n\r\nimport * as styles from '../styles/king.module.scss';\r\nimport Seo from '../components/seo/seo';\r\n\r\nconst King = () => {\r\n  //const [isBlocking, setIsBlocking] = useState(true);\r\n  const isBlocking = false;\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('beforeunload', (e) => {\r\n      // Cancel the event\r\n      e.preventDefault(); // If you prevent default behavior in Mozilla Firefox prompt will always be shown\r\n      // Chrome requires returnValue to be set\r\n      e.returnValue = '';\r\n    });\r\n\r\n    return window.addEventListener('beforeunload', (e) => {\r\n      // the absence of a returnValue property on the event will guarantee the browser unload happens\r\n      delete e['returnValue'];\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout isBlocking={isBlocking}>\r\n      <Seo title={'King'} description={\"Let's play king!\"} />\r\n      <div className={styles.kingPage}>\r\n        {/*isBlocking ? (\r\n          <button className={styles.buttonBlocked} onClick={unBlock()}>\r\n            Click to allow exit\r\n          </button>\r\n        ) : (\r\n          <button className={styles.buttonUnblocked} onClick={block()}>\r\n            Click to block exit\r\n          </button>\r\n        )*/}\r\n        <p>\r\n          <strong>King</strong> is a very good <strong>card game</strong> mbare.\r\n          <br />\r\n          In this section you <strong>cannot</strong> play, it's a <strong>scorer</strong>\r\n        </p>\r\n        <KingHero />\r\n        <Separator />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default King;\r\n","// extracted by mini-css-extract-plugin\nexport var buttonAll = \"king-module--buttonAll--4iEdL\";\nexport var buttonBlocked = \"king-module--buttonBlocked--Gi28P\";\nexport var buttonUnblocked = \"king-module--buttonUnblocked--0NzZF\";\nexport var kingPage = \"king-module--kingPage--Yl-xU\";\nexport var moving = \"king-module--moving--wnxIF\";"],"names":["className","props","i","players","useState","visible","setVisible","numPlayers","push","useEffect","bounding","document","getElementById","getBoundingClientRect","top","left","right","window","innerWidth","bottom","innerHeight","map","index","id","key","type","placeholder","onClick","decreasePlayers","increasePlayers","getPlayers","array","points","setPoints","rounds","addPoints","checked","idNum","value","disabled","createRange","end","name","elem","currentRound","onChange","e","target","player","start","setStart","setNumPlayers","setPlayers","setRounds","removeCards","setRemoveCards","setCurrentRound","playersTmp","alert","check","parseInt","addEventListener","preventDefault","returnValue","isBlocking","title","description"],"sourceRoot":""}