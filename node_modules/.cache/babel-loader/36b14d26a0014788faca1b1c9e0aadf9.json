{"ast":null,"code":"var _jsxFileName = \"/home/mike/Developing/sbrikkisbooks_official_website/src/components/navBar/navBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as styles from './navBar.module.scss';\nimport Logo from '../../atoms/logo/logo';\nimport Navigation from '../navigation/navigation';\nimport Hamburger from '../../atoms/hamburger/hamburger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavBar = props => {\n  _s();\n\n  const [navBarOpen, setNavBarOpen] = useState(false);\n  useEffect(() => {\n    let prevScrollpos = window.pageYOffset;\n\n    window.onscroll = function () {\n      let currentScrollPos = window.pageYOffset;\n\n      if (currentScrollPos === 0) {\n        document.getElementById(\"navBar\").style.top = \"0\";\n      } else if (prevScrollpos > currentScrollPos) {\n        document.getElementById(\"navBar\").style.top = \"0\";\n      } else if (!navBarOpen) {\n        document.getElementById(\"navBar\").style.top = \"-80px\";\n      }\n\n      prevScrollpos = currentScrollPos;\n    };\n  });\n\n  const closeNavBar = () => {\n    setNavBarOpen(false);\n    props.setScrolling();\n  };\n\n  const openNavBar = () => {\n    setNavBarOpen(true);\n    props.setNotScrolling();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.navBar,\n    id: \"navBar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.logo,\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), props.isBlocking ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navigationDesktop,\n      children: /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), navBarOpen && !props.isBlocking ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navigationMobile,\n      children: /*#__PURE__*/_jsxDEV(Navigation, {\n        onClick: closeNavBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this) : null, props.isBlocking ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.hamburger,\n      children: /*#__PURE__*/_jsxDEV(Hamburger, {\n        onClick: navBarOpen ? closeNavBar : openNavBar,\n        navBarOpen: navBarOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBar, \"M9NmwQ3ssy1rqu9AT10qT3LdWOs=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/mike/Developing/sbrikkisbooks_official_website/src/components/navBar/navBar.jsx"],"names":["React","useState","useEffect","styles","Logo","Navigation","Hamburger","NavBar","props","navBarOpen","setNavBarOpen","prevScrollpos","window","pageYOffset","onscroll","currentScrollPos","document","getElementById","style","top","closeNavBar","setScrolling","openNavBar","setNotScrolling","navBar","logo","isBlocking","navigationDesktop","navigationMobile","hamburger"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,aAAa,GAAGC,MAAM,CAACC,WAA3B;;AACAD,IAAAA,MAAM,CAACE,QAAP,GAAkB,YAAY;AAC1B,UAAIC,gBAAgB,GAAGH,MAAM,CAACC,WAA9B;;AACA,UAAIE,gBAAgB,KAAK,CAAzB,EAA4B;AACxBC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,GAAxC,GAA8C,GAA9C;AACH,OAFD,MAEO,IAAIR,aAAa,GAAGI,gBAApB,EAAsC;AACzCC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,GAAxC,GAA8C,GAA9C;AACH,OAFM,MAEA,IAAI,CAACV,UAAL,EAAiB;AACpBO,QAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,GAAxC,GAA8C,OAA9C;AACH;;AACDR,MAAAA,aAAa,GAAGI,gBAAhB;AACH,KAVD;AAWH,GAbQ,CAAT;;AAeA,QAAMK,WAAW,GAAG,MAAM;AACtBV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,IAAAA,KAAK,CAACa,YAAN;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAG,MAAM;AACrBZ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAF,IAAAA,KAAK,CAACe,eAAN;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEpB,MAAM,CAACqB,MAAvB;AAA+B,IAAA,EAAE,EAAC,QAAlC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAErB,MAAM,CAACsB,IAAvB;AAAA,6BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKjB,KAAK,CAACkB,UAAN,GACG,IADH,gBAGG;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACwB,iBAAvB;AAAA,6BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPR,EAaQlB,UAAU,IAAI,CAACD,KAAK,CAACkB,UAArB,gBACI;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACyB,gBAAvB;AAAA,6BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAER;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,GAKI,IAlBZ,EAsBQZ,KAAK,CAACkB,UAAN,GACI,IADJ,gBAGI;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAAC0B,SAAvB;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAEpB,UAAU,GAAGW,WAAH,GAAiBE,UAA/C;AAA2D,QAAA,UAAU,EAAEb;AAAvE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAzBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CA7DD;;GAAMF,M;;KAAAA,M;AA+DN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport * as styles from './navBar.module.scss'\nimport Logo from '../../atoms/logo/logo'\nimport Navigation from '../navigation/navigation'\nimport Hamburger from '../../atoms/hamburger/hamburger'\n\nconst NavBar = (props) => {\n\n    const [navBarOpen, setNavBarOpen] = useState(false);\n\n    useEffect(() => {\n        let prevScrollpos = window.pageYOffset;\n        window.onscroll = function () {\n            let currentScrollPos = window.pageYOffset;\n            if (currentScrollPos === 0) {\n                document.getElementById(\"navBar\").style.top = \"0\";\n            } else if (prevScrollpos > currentScrollPos) {\n                document.getElementById(\"navBar\").style.top = \"0\";\n            } else if (!navBarOpen) {\n                document.getElementById(\"navBar\").style.top = \"-80px\";\n            }\n            prevScrollpos = currentScrollPos;\n        }\n    });\n\n    const closeNavBar = () => {\n        setNavBarOpen(false);\n        props.setScrolling();\n    }\n\n    const openNavBar = () => {\n        setNavBarOpen(true);\n        props.setNotScrolling();\n    }\n\n    return (\n        <div className={styles.navBar} id=\"navBar\">\n            <div className={styles.logo}>\n                <Logo />\n            </div>\n            {props.isBlocking ?\n                null\n                :\n                <div className={styles.navigationDesktop}>\n                    <Navigation />\n                </div>\n            }\n\n            {\n                navBarOpen && !props.isBlocking ?\n                    <div className={styles.navigationMobile}>\n                        <Navigation onClick={closeNavBar} />\n                    </div>\n                    :\n                    null\n            }\n\n            {\n                props.isBlocking ?\n                    null\n                    :\n                    <div className={styles.hamburger}>\n                        <Hamburger onClick={navBarOpen ? closeNavBar : openNavBar} navBarOpen={navBarOpen} />\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default NavBar\n"]},"metadata":{},"sourceType":"module"}