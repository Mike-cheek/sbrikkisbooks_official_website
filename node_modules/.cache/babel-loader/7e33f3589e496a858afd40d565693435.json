{"ast":null,"code":"var _jsxFileName = \"/home/mike/Developing/sbrikkisbooks_official_website/src/components/playerGame/playerGame.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as styles from './playerGame.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PlayerGame = props => {\n  _s();\n\n  let i;\n  let array = [];\n  const [points, setPoints] = useState(0);\n\n  for (i = 1; i <= props.rounds; i++) {\n    array.push(i);\n  }\n\n  const addPoints = (checked, idNum) => {\n    if (checked) {\n      setPoints(points * 1 + 10 + document.getElementById(idNum).value * 1);\n      document.getElementById(idNum).disabled = true;\n    } else {\n      setPoints(points * 1 - 10 - document.getElementById(idNum).value * 1);\n      document.getElementById(idNum).disabled = false;\n    }\n  };\n\n  const createRange = end => {\n    let array = [];\n\n    for (let i = 0; i <= end; i++) {\n      array.push(i);\n    }\n\n    return array;\n  };\n\n  const checkCheckbox = id => {\n    return document.getElementById(id).checked;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles.playerGame,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.name,\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: props.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this), \" (Points: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: points\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 72\n              }, this), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: styles.round,\n            children: [array.map((elem, i) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.win,\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Won?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 45\n                }, this), i === props.currentRound - 1 ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"check\" + props.name + elem,\n                  onChange: e => addPoints(e.target.checked, \"num\" + props.name + elem)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 49\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"check\" + props.name + elem,\n                  onChange: e => addPoints(e.target.checked, \"num\" + props.name + elem),\n                  disabled: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 41\n              }, this);\n            }), array.map((elem, i) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.bet,\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Bet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 49\n                }, this), i === props.currentRound - 1 && !checkCheckbox(\"check\" + props.name + elem) ? /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"num\" + props.name + elem,\n                  placeholder: \"0\",\n                  children: createRange(elem).map(index => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: index,\n                      children: [\" \", index, \" \"]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 69\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"num\" + props.name + elem,\n                  placeholder: \"0\",\n                  disabled: true,\n                  children: createRange(elem).map(index => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: index,\n                      children: [\" \", index, \" \"]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 69\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 45\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Round \", elem]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PlayerGame, \"gp2BFHLIT64LRpa8sdDixSR+CFo=\");\n\n_c = PlayerGame;\nexport default PlayerGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerGame\");","map":{"version":3,"sources":["/home/mike/Developing/sbrikkisbooks_official_website/src/components/playerGame/playerGame.jsx"],"names":["React","useState","styles","PlayerGame","props","i","array","points","setPoints","rounds","push","addPoints","checked","idNum","document","getElementById","value","disabled","createRange","end","checkCheckbox","id","playerGame","name","round","map","elem","win","currentRound","e","target","bet","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport * as styles from './playerGame.module.scss'\n\nconst PlayerGame = (props) => {\n\n    let i;\n\n    let array = [];\n\n    const [points, setPoints] = useState(0);\n\n    for (i = 1; i <= props.rounds; i++) {\n        array.push(i);\n    }\n\n    const addPoints = (checked, idNum) => {\n        if (checked) {\n            setPoints(points * 1 + 10 + document.getElementById(idNum).value * 1);\n            document.getElementById(idNum).disabled = true;\n        }\n        else {\n            setPoints(points * 1 - 10 - document.getElementById(idNum).value * 1);\n            document.getElementById(idNum).disabled = false;\n        }\n    }\n\n    const createRange = ((end) => {\n        let array = [];\n        for (let i = 0; i <= end; i++) {\n            array.push(i);\n        }\n        return array;\n    });\n\n    const checkCheckbox = (id) => {\n        return document.getElementById(id).checked;\n    }\n\n    return (\n        <>\n            <table className={styles.playerGame}>\n                <tbody>\n                    <tr>\n                        <td>\n                            <p className={styles.name}>\n                                <strong>{props.name}</strong> (Points: <strong>{points}</strong>)\n                            </p>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className={styles.round}>\n                            {\n                                array.map((elem, i) => {\n                                    return (\n                                        <div className={styles.win}>\n                                            <h5>Won?</h5>\n                                            {i === props.currentRound - 1 ?\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={\"check\" + props.name + elem}\n                                                    onChange={(e) => addPoints(e.target.checked, \"num\" + props.name + elem)}\n                                                />\n                                                :\n                                                <input\n                                                    type=\"checkbox\"\n                                                    id={\"check\" + props.name + elem}\n                                                    onChange={(e) => addPoints(e.target.checked, \"num\" + props.name + elem)}\n                                                    disabled\n                                                />\n                                            }\n                                        </div>\n                                    )\n                                })}\n                                {\n                                    array.map((elem, i) => {\n                                        return (\n                                            <div className={styles.bet}>\n                                                <h5>Bet</h5>\n                                                {i === props.currentRound - 1 && !checkCheckbox(\"check\" + props.name + elem) ?\n                                                    <select\n                                                        id={\"num\" + props.name + elem}\n                                                        placeholder=\"0\"\n                                                    >\n                                                        {\n                                                            createRange(elem).map((index) => {\n                                                                return (\n                                                                    <option\n                                                                        key={index}\n                                                                        value={index}\n                                                                    > {index} </option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </select>\n                                                    :\n                                                    <select\n                                                        id={\"num\" + props.name + elem}\n                                                        placeholder=\"0\"\n                                                        disabled\n                                                    >\n                                                        {\n                                                            createRange(elem).map((index) => {\n                                                                return (\n                                                                    <option\n                                                                        key={index}\n                                                                        value={index}\n                                                                    > {index} </option>\n                                                                );\n                                                            })\n                                                        }\n                                                    </select>\n                                                }\n                                            </div>\n                                        )\n                                    })}\n                                        <h6>Round {elem}</h6>  \n                                    \n                                \n                            \n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default PlayerGame\n"]},"metadata":{},"sourceType":"module"}