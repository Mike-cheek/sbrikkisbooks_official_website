{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set, get } from \"firebase/database\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\n\nconst firebaseConfig = {\n  apiKey: process.env.API_KEY,\n  authDomain: process.env.AUTH_DOMAIN,\n  projectId: process.env.PROJECT_ID,\n  storageBucket: process.env.STORAGE_BUCKET,\n  messagingSenderId: process.env.MESSAGING_SENDER_ID,\n  appId: process.env.APP_ID,\n  measurementId: process.env.MEASUREMENT_ID,\n  databaseURL: process.env.DATABASE_URL\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig); // Get a reference to the database service\n\nconst database = getDatabase(app);\nconst dbRef = ref(database);\nget(child(dbRef, `users/${userId}`)).then(snapshot => {\n  if (snapshot.exists()) {\n    console.log(snapshot.val());\n  } else {\n    console.log(\"No data available\");\n  }\n}).catch(error => {\n  console.error(error);\n});\nexport default database;","map":{"version":3,"sources":["/home/mike/Developing/sbrikkisbooks_official_website/src/atoms/firebase.jsx"],"names":["initializeApp","getDatabase","ref","onValue","set","get","firebaseConfig","apiKey","process","env","API_KEY","authDomain","AUTH_DOMAIN","projectId","PROJECT_ID","storageBucket","STORAGE_BUCKET","messagingSenderId","MESSAGING_SENDER_ID","appId","APP_ID","measurementId","MEASUREMENT_ID","databaseURL","DATABASE_URL","app","database","dbRef","child","userId","then","snapshot","exists","console","log","val","catch","error"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,OAA3B,EAAoCC,GAApC,EAAyCC,GAAzC,QAAoD,mBAApD,C,CACA;AACA;AAEA;AACA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADC;AAErBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,WAFH;AAGrBC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,UAHF;AAIrBC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,cAJN;AAKrBC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,mBALV;AAMrBC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW,MANE;AAOrBC,EAAAA,aAAa,EAAEb,OAAO,CAACC,GAAR,CAAYa,cAPN;AAQrBC,EAAAA,WAAW,EAAEf,OAAO,CAACC,GAAR,CAAYe;AARJ,CAAvB,C,CAWA;;AACA,MAAMC,GAAG,GAAGzB,aAAa,CAACM,cAAD,CAAzB,C,CAEA;;AACA,MAAMoB,QAAQ,GAAGzB,WAAW,CAACwB,GAAD,CAA5B;AAGA,MAAME,KAAK,GAAGzB,GAAG,CAACwB,QAAD,CAAjB;AACArB,GAAG,CAACuB,KAAK,CAACD,KAAD,EAAS,SAAQE,MAAO,EAAxB,CAAN,CAAH,CAAqCC,IAArC,CAA2CC,QAAD,IAAc;AACtD,MAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,GAAT,EAAZ;AACD,GAFD,MAEO;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,CAND,EAMGE,KANH,CAMUC,KAAD,IAAW;AAClBJ,EAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,CARD;AAUA,eAAeX,QAAf","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, ref, onValue, set, get } from \"firebase/database\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.API_KEY,\n  authDomain: process.env.AUTH_DOMAIN,\n  projectId: process.env.PROJECT_ID,\n  storageBucket: process.env.STORAGE_BUCKET,\n  messagingSenderId: process.env.MESSAGING_SENDER_ID,\n  appId: process.env.APP_ID,\n  measurementId: process.env.MEASUREMENT_ID,\n  databaseURL: process.env.DATABASE_URL\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Get a reference to the database service\nconst database = getDatabase(app);\n\n\nconst dbRef = ref(database);\nget(child(dbRef, `users/${userId}`)).then((snapshot) => {\n  if (snapshot.exists()) {\n    console.log(snapshot.val());\n  } else {\n    console.log(\"No data available\");\n  }\n}).catch((error) => {\n  console.error(error);\n});\n\nexport default database;"]},"metadata":{},"sourceType":"module"}