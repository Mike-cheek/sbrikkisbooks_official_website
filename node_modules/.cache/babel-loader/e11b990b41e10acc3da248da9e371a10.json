{"ast":null,"code":"var _jsxFileName = \"/home/mike/Developing/sbrikkisbooks_official_website/src/components/contactUs/contactUs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Hamburger from '../../atoms/hamburger/hamburger';\nimport MailTo from '../../atoms/mailTo/mailTo';\nimport * as styles from './contactUs.module.scss';\nimport { ReCaptcha } from 'react-recaptcha-google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactUs(props) {\n  _s();\n\n  const [name, setName] = useState();\n  const [surname, setSurname] = useState();\n  const captcha = useRef();\n  onLoadRecaptcha = onLoadRecaptcha.bind(this);\n  verifyCallback = verifyCallback.bind(this);\n  useEffect(() => {\n    if (captchaDemo) {\n      console.log(\"started, just a second...\");\n      captchaDemo.reset();\n      captchaDemo.execute();\n    }\n  });\n\n  const onLoadRecaptcha = () => {\n    if (this.captchaDemo) {\n      this.captchaDemo.reset();\n      this.captchaDemo.execute();\n    }\n  };\n\n  const verifyCallback = recaptchaToken => {\n    // Here you will get the final recaptchaToken!!!  \n    console.log(recaptchaToken, \"<= your recaptcha token\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contactUs,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contactHero,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.hamWrapper,\n        children: /*#__PURE__*/_jsxDEV(Hamburger, {\n          navBarOpen: props.formOpened,\n          onClick: props.closeForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setName(e),\n        className: styles.nsInput,\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSurname(e),\n        className: styles.nsInput,\n        placeholder: \"Surname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReCaptcha, {\n        ref: captcha,\n        size: \"invisible\",\n        render: \"explicit\",\n        sitekey: \"your_site_key\",\n        onloadCallback: this.onLoadRecaptcha,\n        verifyCallback: this.verifyCallback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MailTo, {\n        email: \"sbrikkisbooks@gmail.com\",\n        subject: \"I want to join!\",\n        body: \"Hi, I'm \" + name + \" \" + surname + \". I want to join to your Book Club!\",\n        children: \"Send us a mail!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactUs, \"PDemeh3JCkGGPR0A53x1qfnGyh0=\");\n\n_c = ContactUs;\nexport default ContactUs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactUs\");","map":{"version":3,"sources":["/home/mike/Developing/sbrikkisbooks_official_website/src/components/contactUs/contactUs.jsx"],"names":["React","useState","useEffect","useRef","Hamburger","MailTo","styles","ReCaptcha","ContactUs","props","name","setName","surname","setSurname","captcha","onLoadRecaptcha","bind","verifyCallback","captchaDemo","console","log","reset","execute","recaptchaToken","contactUs","contactHero","hamWrapper","formOpened","closeForm","e","nsInput"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport Hamburger from '../../atoms/hamburger/hamburger'\nimport MailTo from '../../atoms/mailTo/mailTo'\nimport * as styles from './contactUs.module.scss'\nimport { ReCaptcha } from 'react-recaptcha-google'\n\nfunction ContactUs(props) {\n    const [name, setName] = useState();\n    const [surname, setSurname] = useState();\n\n    const captcha = useRef();\n\n    onLoadRecaptcha = onLoadRecaptcha.bind(this);\n    verifyCallback = verifyCallback.bind(this);\n\n    useEffect(() => {\n        if (captchaDemo) {\n            console.log(\"started, just a second...\")\n            captchaDemo.reset();\n            captchaDemo.execute();\n        }\n    })\n\n    const onLoadRecaptcha = () => {\n        if (this.captchaDemo) {\n            this.captchaDemo.reset();\n            this.captchaDemo.execute();\n        }\n    }\n\n    const verifyCallback = (recaptchaToken) => {\n        // Here you will get the final recaptchaToken!!!  \n        console.log(recaptchaToken, \"<= your recaptcha token\")\n    }\n\n    return (\n        <div className={styles.contactUs} >\n            <div className={styles.contactHero}>\n                <div className={styles.hamWrapper}>\n                    <Hamburger navBarOpen={props.formOpened} onClick={props.closeForm} />\n                </div>\n                <input type=\"text\" onChange={e => setName(e)} className={styles.nsInput} placeholder=\"Name\" />\n                <input type=\"text\" onChange={e => setSurname(e)} className={styles.nsInput} placeholder=\"Surname\" />\n                <ReCaptcha\n                    ref={captcha}\n                    size=\"invisible\"\n                    render=\"explicit\"\n                    sitekey=\"your_site_key\"\n                    onloadCallback={this.onLoadRecaptcha}\n                    verifyCallback={this.verifyCallback}\n                />\n                <MailTo email=\"sbrikkisbooks@gmail.com\" subject=\"I want to join!\" body={\"Hi, I'm \" + name + \" \" + surname + \". I want to join to your Book Club!\"}>\n                    Send us a mail!\n                </MailTo>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ContactUs"]},"metadata":{},"sourceType":"module"}